/* eslint-disable @next/next/no-img-element */
import Head from 'next/head'
import { useCallback, useEffect, useState } from 'react'
import { appStore } from '@/context/store'
import Footer from '@/Footer'
import Switch from 'react-switch'

export default function Home() {

  const { dark, handledDarkMode, darkmode } = appStore() 
  // const [dark, setDark] = useState(false)
  
  // useEffect(() => {    
  //   const item = localStorage.getItem('darkmode')
  //   if (item && item === 'true') {
  //     console.log(item)
  //     setDark(true)
  //   }
  // }, [])

  // const toogle = () => setDark(!dark)
  // 
  const [call, setCall] = useState(true)
  const toogleC = useCallback(() => {
    darkmode(dark)
    // https://dmitripavlutin.com/react-throttle-debounce/
    // array de dependencias de los HOOK cuando tiene que volver a renderizar sus valores internos 
  }, [])

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>        
        <header className={darkmode(dark).style}>
          <h1>{
              dark 
              ? 'Dark mode activate'
              : 'Ligth mode activate'
            }</h1>
          {/* <button onClick={() => toogle()}>{
            dark ? 'Dark Mode' : 'Ligth Mode'
          }</button> */}
          {/* <button onClick={() => handledDarkMode(!dark)}>Store Button</button> */}
          <Switch onChange={() => handledDarkMode(!dark)?.style} checked={dark} />
        </header>
        <main className={darkmode(dark).style}>
          <img className='animation-rotate' src={darkmode(dark).src}></img>
        </main>
        <Footer/>
      </div>
    </>
  )
}
